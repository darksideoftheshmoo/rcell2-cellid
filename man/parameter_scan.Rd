% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellid_parameter_scan.R
\name{parameter_scan}
\alias{parameter_scan}
\title{Scan parameters for CellID}
\usage{
parameter_scan(
  parameters.df,
  data.dir,
  test.dir = normalizePath(paste0(tempdir(check = T), "/images_directory/test.dir"),
    mustWork = F),
  test.positions,
  test.frames,
  file.pattern = "^(BF|[A-Z]FP)_Position(\\\\d+)_time(\\\\d+).tif$",
  fluorescence.pattern = "^([GCYRT]FP|[GCYRT]\\\\d+)_Position\\\\d+_time\\\\d+.tif$",
  cell.command = NULL,
  n_cores = NULL,
  verbose = FALSE
)
}
\arguments{
\item{parameters.df}{}

\item{data.dir}{}

\item{test.dir}{}

\item{test.positions}{}

\item{test.frames}{}

\item{file.pattern}{Regex pattern for all tif files, with one group for each of \code{c("ch", "pos", "t.frame")} in \code{file.pattern.groups.order}. Uses \code{"^(BF|[A-Z]FP)_Position(\\d+)_time(\\d+).tif$"} by default. To omit time, use an empty group for the t.frame in the regex, for example: \code{"^(BF|[A-Z]FP)_Position(\\d+)().tif$"}.
To consider Z-stacks, use something like "^(BF|[A-Z]\\d+)_Position(\\d+)_time(\\d+).tif$"}

\item{fluorescence.pattern}{Regex describing what the fluorescence/channel ID string looks like (default "^([GCYRT]FP|[GCYRT]\\d+)_Position\\d+_time\\d+.tif$"). There must be only one capturing group, ant it must be for the channel identifier.}

\item{cell.command}{By default \code{NULL}, to use the built-in binary. Otherwise a path to a CellID binary executable (get if from https://github.com/darksideoftheshmoo/cellID-linux).}

\item{n_cores}{Number of cores to use for position-wise parallelization,internally capped to number of positions in \code{arguments}. Set to 1 to disable parallelization. If NULL, defaults to available cores - 1.}

\item{verbose}{Print startup messages.}
}
\value{
Data frame with the results. To use it, have a look at the rmarkdown template bundled in the package, or get it with \code{get_workflow_template_cellid()}.
}
\description{
Scan parameters for CellID
}
\details{
A few "summary" quantities are calculated for each run:

fft: mean fft.stat

el.p: mean el.p

ucids: Number of found cells

persistence: Average frames per cell

roughness: function copied from the seewave package: "Roughness or total curvature is the integrated squared second derivative" (see: https://cran.r-project.org/web/packages/seewave/index.html).

roughness2: This variation takes the sqrt of roughness and divides by total length. To correct for extra accumulated roughness in cells detected across more t.frames.
}
\examples{
Have a look at the rmarkdown template bundled in the package, or get it with \code{get_workflow_template_cellid()}.
}
