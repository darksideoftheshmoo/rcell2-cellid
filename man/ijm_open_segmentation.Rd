% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imagej_macros.R
\name{ijm_open_segmentation}
\alias{ijm_open_segmentation}
\title{ImageJ macro to open ".out" files as a virtual hyperstack}
\usage{
ijm_open_segmentation(cellid.args, add_tools = F, use_out = 1, ...)
}
\arguments{
\item{cellid.args}{The "arguments" data frame, as produced by \code{rcell2.cellid::arguments}.}

\item{add_tools}{Add commands to the macro that open handy tools (e.g. for tagging events in single cells, adjusting brightness, etc.).}

\item{use_out}{Wether to use original images (FALSE/0), the segmented output (TRUE/1), or both (0:1).}

\item{...}{
  Arguments passed on to \code{\link[=ijm_open_hyperstack]{ijm_open_hyperstack}}
  \describe{
    \item{\code{images}}{The "images" dataframe, as loaded by get_cell_data, load_cell_data, or as generated by arguments_to_images from arguments.}
    \item{\code{temp_dir_name}}{Base-name for the temporary directory where renamed links to images are stored. It will be created as a subdirectory of \code{tempdir()}. Any directory in this path with the same name will be deleted before use.}
    \item{\code{macro_file}}{Write the macro to temporary file/directory. Else, a path to the file where to save the macro.}
    \item{\code{fix_order}}{Symlink images to a temporary directory with new file names. The new sorting order will make images appear with the correct channel-slice-frame mapping in ImageJ.}
  }}
}
\description{
Use this function to quickly inspect the result of the segmentation in ImageJ/FIJI.
}
