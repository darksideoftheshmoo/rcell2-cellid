% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mda_utils.R
\name{grid_to_long}
\alias{grid_to_long}
\title{Parse a grid sheet into long format}
\usage{
grid_to_long(
  sheet_data,
  rows_to = "row",
  names_to = "col",
  values_to = "row",
  transform_fun = NULL
)
}
\arguments{
\item{sheet_data}{A data frame containing the grid data. The first column is treated as row identifiers, and all other columns are treated as values.}

\item{rows_to}{A character string specifying the name of the new column for row identifiers. Default is `"row"`.}

\item{names_to}{A character string specifying the name of the new column for column names. Default is `"col"`.}

\item{values_to}{A character string specifying the name of the new column for the cell values. Default is `"row"`.}

\item{transform_fun}{A function to transform cell values when pivoting. If `NULL`, the function automatically determines an appropriate prototype based on the data type of the value columns.}
}
\value{
A data frame in long format with columns:
\describe{
  \item{\code{rows_to}}{Row identifiers, renamed based on the `rows_to` parameter.}
  \item{\code{names_to}}{Column names from the original grid, renamed based on the `names_to` parameter.}
  \item{\code{values_to}}{Cell values from the original grid, renamed based on the `values_to` parameter.}
}
}
\description{
Converts a data frame representing a grid (e.g., a spreadsheet) into a long format for easier manipulation and analysis.
}
\details{
The function pivots a wide-format grid into a long-format data frame. 
If no `transform_fun` is provided, the function uses `find_common_type` to infer the most compatible data type for the value columns.
The `transform_fun` is used as the `values_transform` argument in `tidyr::pivot_longer`.
}
\examples{
# Example grid data
grid_data <- data.frame(
  RowID = c("A", "B", "C"),
  Col1 = c(1, 2, 3),
  Col2 = c(T, F, NA)
)

# Convert to long format
grid_to_long(
  sheet_data = grid_data,
  rows_to = "row_id",
  names_to = "column_id",
  values_to = "value"
)

}
