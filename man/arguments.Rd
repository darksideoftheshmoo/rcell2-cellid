% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cellid_wrapper.R
\name{arguments}
\alias{arguments}
\title{Obtener argumentos para CellID}
\usage{
arguments(
  path,
  parameters = rcell2.cellid::parameters_write(),
  BF.pattern = "^BF",
  file.pattern = "^(BF|[A-Z]FP)_Position(\\\\d+)_time(\\\\d+).tif$",
  file.pattern.groups.order = c("ch", "pos", "t.frame"),
  output.dir.basename = "Position",
  tiff.ext = "tif$",
  bf_as_fl = F,
  dark_pattern = "^(BF|[A-Z]FP)_dark.tif$",
  flat_pattern = "^(BF|[A-Z]FP)_flat.tif$"
)
}
\arguments{
\item{path}{Directory where images are stored, full path.}

\item{parameters}{Path to the parameters file or a data.frame with "pos" (position number) and "parameter" (path) columns. Defaults to \code{parameters_write()}.}

\item{BF.pattern}{Regex pattern to detect BF images only. Defaults to: \code{"^BF"}}

\item{file.pattern}{Regex pattern for all tif files, with one group for each of \code{c("ch", "pos", "t.frame")} in \code{file.pattern.groups.order}. Uses \code{"^(BF|[A-Z]FP)_Position(\\d+)_time(\\d+).tif$"} by default. To omit time, use an empty group for the t.frame in the regex, for example: \code{"^(BF|[A-Z]FP)_Position(\\d+)().tif$"}.
To consider Z-stacks, use something like "^(BF|[A-Z]\\d+)_Position(\\d+)_time(\\d+).tif$"}

\item{file.pattern.groups.order}{A character vector of components \code{c("ch", "z", "pos", "t.frame")} with order corresponding to the order of groups in \code{file.pattern}.}

\item{output.dir.basename}{Basename for the CellID output directories for each position.}

\item{tiff.ext}{Regex pattern for the tif file extension.}

\item{bf_as_fl}{If TRUE, BF paths will be used as FL paths. This allows for BF-only experiments.}

\item{dark_pattern}{A regular expression which matches only "dark correction" tiff files in the path; and has a single capturing group for the channel ID. Cell-ID will subtract this background image to the images of corresponding fluorescent channels. Note: exposure times must be equal, otherwise no correction is done (with no warning).}

\item{flat_pattern}{A regular expression which matches only "flat correction" tiff files in the path; and has a single capturing group for the channel ID. With thses images, Cell-ID will attempt to correct for uneven illumination, on the corresponding fluorescent channels.}
}
\value{
A data.frame with all the information needed to run CellID
}
\description{
Obtener argumentos para CellID
}
\details{
All 4 regex groups are mandatory, but they may be left empty to exclude a field.
For instance, \code{t.frame} may be left as empty parenthesis \code{()},
but always preserving group order defined by \code{file.pattern.groups.order}.

If you only have BF images, consider setting \code{bf_as_fl = T}.

The "pos" and "channel" regex groups must always match position and channel identifiers in the file name, respectively.

Here are some example \code{file.pattern} regular expressions, when \code{file.pattern.groups.order = c("ch", "pos", "t.frame")}:

- No Z planes, no time (note the empty parentheses): \code{file.pattern = "^(BF|[TYR]FP)_Position(\\d+)().tif$"}

- No Z planes, with time: \code{file.pattern = "^(BF|[A-Z]FP)_Position(\\d+)_time(\\d+).tif$"}

- With Z planes and time: \code{file.pattern = "^(BF|[TYR]FP|[TYR]\\d{2})_Position(\\d+)_time(\\d+).tif$"}

Note that "Z planes" will be processed by CellID the same way as other channels.
More importantly, CellID distinguishes and groups image channels using the first 3 letters in the file name,
which limits planes to 100 per channel letter (R00 to R99).
}
