% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imagej_macros.R
\name{imagej_macro_run}
\alias{imagej_macro_run}
\title{Run headless ImageJ Macro file}
\usage{
imagej_macro_run(
  script.path,
  imagej.path = "~/Software/FIJI/Fiji.app/ImageJ-linux64",
  wait = T,
  headless = T,
  extra.args = ""
)
}
\arguments{
\item{script.path}{Path to the ImageJ macro. Defaults to built-in macro.}

\item{imagej.path}{Path to the ImageJ binary (a path to "ImageJ-linux64" or equivalent).}

\item{wait}{a logical (not \code{NA}) indicating whether the \R
    interpreter should wait for the command to finish, or run it
    asynchronously.  This will be ignored (and the interpreter will
    always wait) if \code{intern = TRUE}. When running the command
    asynchronously, no output will be displayed on the \code{Rgui}
    console in Windows (it will be dropped, instead).}

\item{headless}{Wether ImageJ should be run headlessly (no GUI).}

\item{extra.args}{A string with extra arguments to the ImageJ command, pasted at the end.}
}
\description{
The macro program takes one argument: a path to a directory containing images matching the pattern "BF.*.out.tif".
}
\details{
Images are then proceesed with ImageJ's "Bandpass filter" and the output is saved to a subdirectory named "filtered".
}
